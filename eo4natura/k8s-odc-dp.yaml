---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datacube-config
data:
  DB_HOSTNAME: 'database-1.cluster-cfgam6cksth1.us-west-2.rds.amazonaws.com'
  DB_USERNAME: 'postgres'
  DB_DATABASE: 'postgres'
  DB_PORT: '5432'
  AWS_DEFAULT_REGION: 'us-west-2'
  PRODUCT_CATALOG: 'https://raw.githubusercontent.com/GeoscienceAustralia/dea-config/a4f39b485b33608a016032d9987251881fec4b6f/workspaces/sandbox-products.csv'
  METADATA_CATALOG: 'https://raw.githubusercontent.com/GeoscienceAustralia/dea-config/a4f39b485b33608a016032d9987251881fec4b6f/workspaces/sandbox-metadata.yaml'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datacube-index
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datacube-index
  template:
    metadata:
      labels:
        app: datacube-index
    spec:
      containers:
        - name: datacube-index
          image: opendatacube/datacube-index:local
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: datacube-config
            - secretRef:
                name: datacube-secret
          command: ['tail', -f", '/dev/null']
          restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datacube-explorer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datacube-explorer
  template:
    metadata:
      labels:
        app: datacube-explorer
    spec:
      containers:
        - name: datacube-explorer
          image: opendatacube/explorer:local
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: datacube-config
            - secretRef:
                name: datacube-secret
          ports:
            - containerPort: 8080
          restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xcube-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xcube-server
  template:
    metadata:
      labels:
        app: xcube-server
    spec:
      containers:
        - name: xcube-server
          image: xcube:0.10.0
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
          ports:
            - containerPort: 8080
          command: ['/bin/bash', '-c']
          args:
            - 'xcube serve -vvv --prefix xcubeserver/ --revprefix https://eo4natura.data-cube.gr/xcubeserver --address 0.0.0.0 --port 8080 -c /home/xcube/examples/serve/demo/config.yml'
          restartPolicy: UnlessStopped
          volumeMounts:
            - name: xcube-server-config
              mountPath: /home/xcube/examples/serve/demo/config.yml
      volumes:
        - name: xcube-server-config
          persistentVolumeClaim:
            claimName: pvc-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-config
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvc-config
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  local:
    path: /path/to/host/config
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - your-node-name # This should match the value of the name of the node.
  storageClassName: local-storage
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: explorer-ingress
spec:
  rules:
    - host: eo4natura.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: explorer-service
                port:
                  number: 9000
    - host: eo4natura.example.com
      http:
        paths:
          - path: /xcubeserver/
            pathType: Prefix
            backend:
              service:
                name: xcube-server-service
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: explorer-service
spec:
  selector:
    app: datacube-explorer
  ports:
    - name: explorer
      port: 9000
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: xcube-server-service
spec:
  selector:
    app: xcube-server
  ports:
    - name: xcube
      port: 80
      targetPort: 8080
  type: ClusterIP
# Add a secret to the k8s cluster for DB_PASSWORD
# kubectl create secret generic datacube-secret --from-literal=DB_PASSWORD=opendatacubepassword
